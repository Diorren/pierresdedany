{% extends 'base.html.twig' %}

{% block title 'Produit' %}

{% block body %}
<div class="container mt-5 mb-5 pt-5">
    <h1>{{ product.name }}</h1>
    <div class="row">
        <div class="col-md-3">
            {% if product.images is not empty %}
                    <img id="collection" src="{{ asset('uploads/'~ product.images[0].name) }}" alt="{{product.name}}"
                    style="height:200px;width:100%;display:block;">
            {% endif %}		
		</div>
            <p>{{ product.content }}</p>
		<div>
			<p><strong>Prix :</strong><span> {{ product.price }} &euro;</span></p>
			<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#stripeModal">Commander</button>        
		</div>
    </div>    
</div>
<!-- Modal -->
<div class="modal fade" id="stripeModal" tabindex="-1" role="dialog" aria-labelledby="stripeModalTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="stripeModalTitle">Paiement par CB</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form action="{{ path('users_payment') }}" method="post" id="payment-form">
					<input type="hidden" name="total" value="{{ product.price }}">
					<div class="form-group">
						<label for="card-element">Carte Bancaire:</label>
						<div id="card-element"><!-- A Stripe Element will be inserted here. --></div>
						<!-- Used to display form errors. -->
						<div id="card-errors" role="alert"></div>
					</div>
					<div class='form-group'>
						<div class='col-md-12'>
							<div class='form-control'>
								Total:
								<span>{{product.price}}&euro;</span>
							</div>
						</div>
					</div>
					<button>Soumission Paiement</button>
			    </form>
		    </div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
			</div>
        </div>
	</div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
const stripe = new Stripe('pk_test_WvuZ0E71v7knpipzpbjZBwqC00c9mlTwqC');
var elements = stripe.elements();
console.log('fabrice');
// Custom styling can be passed to options when creating an Element.
// (Note that this demo uses a wider set of styles than the guide below.)
var style = {
base: {
color: '#32325d',
fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
fontSmoothing: 'antialiased',
fontSize: '16px',
'::placeholder': {
color: '#aab7c4'
}
},
invalid: {
color: '#fa755a',
iconColor: '#fa755a'
}
};

// Create an instance of the card Element.
var card = elements.create('card', {style: style});

// Add an instance of the card Element into the `card-element` <div>.
card.mount('#card-element');
var iframe = document.getElementsByName('__privateStripeFrame5')[0];
iframe.style.width = '100%';


// Handle real-time validation errors from the card Element.
card.addEventListener('change', function (event) {
var displayError = document.getElementById('card-errors');
if (event.error) {
displayError.textContent = event.error.message;
} else {
displayError.textContent = '';
}
});

// Handle form submission.
var form = document.getElementById('payment-form');
form.addEventListener('submit', function (event) {
event.preventDefault();

stripe.createToken(card).then(function (result) {
if (result.error) { // Inform the user if there was an error.
var errorElement = document.getElementById('card-errors');
errorElement.textContent = result.error.message;
} else { // Send the token to your server.
stripeTokenHandler(result.token);
}
});
});

// Submit the form with the token ID.
function stripeTokenHandler(token) { // Insert the token ID into the form so it gets submitted to the server
var form = document.getElementById('payment-form');
var hiddenInput = document.createElement('input');
hiddenInput.setAttribute('type', 'hidden');
hiddenInput.setAttribute('name', 'stripeToken');
hiddenInput.setAttribute('value', token.id);
form.appendChild(hiddenInput);

// Submit the form
form.submit();
}
</script>

{% endblock %}
